import java.awt.*;
import java.awt.event.*;
import javax.swing.OverlayLayout;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.*;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

/**
 * Write a description of class Runner here.
 * 
 * @author (Michael Bagamian) 
 * @version (5/24/17)
 */
public class Runner
{
    private static final int FRAME_WIDTH = 3000;
    private static final int FRAME_HEIGHT = 1000;
    private static ArrayList<Balloon>  balloonList = new ArrayList<Balloon>();
    private static ArrayList<String> balloonLetters = new ArrayList<String>();
    private static int[] balloonYCoordList = {440, 480, 540, 555, 580, 620, 660, 700, 720, 740, 780, 800, 830, 860, 890, 900, 910, 910, 915, 920};

    private static int balloonCount = 0;
    private static int balloonYCoord = 450;

    public static void main(String[] args)
    { 
        int j = 3; 

        //Creates the Frame and the Pane
        JFrame frame = new JFrame();
        JPanel pane = new JPanel();

        //Creates the 15 Balloon Objects, Spikes and Bar Objects, and PlayerStatus Object
        PlayerStatus player = new PlayerStatus();
        SpikeBarBackgroundGUI sBB = new SpikeBarBackgroundGUI();

        //Creates Balloons and adds them onto a list
        for(int i = 0; i < 20; i++)
        {
            balloonList.add(new Balloon(balloonYCoordList[i]));
        }

        //Adds the assigned Letter from each balloon to an ArrayList of type String called balloonLetters. 
        for(int i = 0; i < balloonList.size(); i++)
        {
            balloonLetters.add(balloonList.get(i).getLetter());
        }

        //Modifies the JFrame by naming the frame and setting it to be visible
        JFrame frameFirst = new JFrame("Welcome to the Balloon Game!");
        frameFirst.setVisible(true);
        frameFirst.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameFirst.setSize(FRAME_WIDTH, FRAME_HEIGHT);

        //Creates buttons objects
        JPanel paneFirst = new JPanel();
        JButton playGame = new JButton("Play Now");
        JButton tutorial = new JButton("How To Play");

        //Adds buttons objects to the screen
        paneFirst.add(playGame);

        //paneFirst.add(tutorial);
        frameFirst.add(paneFirst);     

        class Action implements ActionListener
        {
            public void actionPerformed(ActionEvent e)
            {
                //Lays out how the frame will look like
                LayoutManager overlay = new OverlayLayout(pane);
                pane.setLayout(overlay);

                //Adds the Pane onto the Frame
                frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
                frame.add(pane);
                frame.setTitle("Balloons Moving");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       
                frame.setVisible(true);

                //Adds the balloons onto the panel
                for(int i = 0; i < balloonList.size(); i++)
                {
                    pane.add(balloonList.get(i));
                    balloonList.get(i).setVisible(true);
                }

                //Adds the spikes and the popping bar onto the panel
                pane.add(sBB); 

                //Focuses panel on keylistener
                pane.setFocusable(true);
                pane.requestFocusInWindow();
                pane.setFocusTraversalKeysEnabled(false);

                //Imports the background image and adds it onto the panel
                ImageIcon imageIcon = new ImageIcon("images.jpg"); //url: http://bhstorm.com/beautiful-sky-wallpapers-mobile/
                Image imag = imageIcon.getImage();
                Image img2 = imag.getScaledInstance(FRAME_WIDTH,FRAME_HEIGHT, java.awt.Image.SCALE_SMOOTH); 
                ImageIcon img = new ImageIcon(img2);
                JLabel image = new JLabel(img);

                //Moves the image to the back
                pane.add(image,BorderLayout.CENTER);

                //Balloons are mobing up here
                class BalloonMovingListener implements ActionListener
                {
                    public void actionPerformed(ActionEvent event)
                    {
                        for(int i = 0; i < balloonList.size(); i++)
                        {
                            //Moves the balloon up
                            balloonList.get(i).moveBy(1);
                            balloonList.get(i).setVisible(true);
                            frame.repaint();
                        }

                        for(int i = 0; i < balloonList.size(); i++)
                        {
                            if(balloonList.get(i).getY() == 13 && balloonList.get(i).isPopped() == false)
                            {   
                                player.setHealth();
                                pane.remove(balloonList.get(i));
                                balloonList.get(i).reset(balloonYCoordList[i]);
                                balloonList.get(i).setPopped(false);

                                //Replace the previous balloon with a new balloon with new location and letter
                                balloonLetters.set(i, balloonList.get(i).getLetter());

                                //Add the balloon onto the screen and put the imported image to the background
                                pane.add(balloonList.get(i));
                                pane.add(image,BorderLayout.CENTER);

                                balloonList.get(i).setVisible(true);
                                System.out.println(player.getHealth());

                                //Repaint the frame
                                frame.repaint();
                            }

                            if(balloonList.get(i).getY() == 13 && balloonList.get(i).isPopped() == true)
                            {
                                pane.remove(balloonList.get(i));
                                balloonList.get(i).reset(balloonYCoordList[i]);
                                balloonList.get(i).setPopped(false);
                                
                                //Replace the previous balloon with a new balloon with new location and letter
                                balloonLetters.set(i, balloonList.get(i).getLetter());

                                //Add the balloon onto the screen and put the imported image to the background
                                pane.add(balloonList.get(i));
                                pane.add(image,BorderLayout.CENTER);

                                balloonList.get(i).setVisible(true);
                                System.out.println(player.getHealth());

                                //Repaint the frame
                                frame.repaint();
                            }

                            if(i == balloonList.size())
                                i = 0;

                            //Shows end result
                            if(player.getHealth() <= 0)
                            {
                                for(int j = 0; j < balloonList.size(); j++)
                                {
                                    balloonList.get(j).setVisible(false);
                                }
                                JOptionPane.showMessageDialog(frame, "You scored " + player.getScore() + ".");
                                System.exit(0);
                            }
                        }
                    }
                }

                //How the game responds to player pressing the keyboard letters is defined here
                class Keys implements KeyListener
                {
                    public void keyPressed(KeyEvent e)
                    {
                        //If key pressed DOES correspond with the assigned balloon letter, the player earns point and the balloon is popped
                        for(int i = 0; i < balloonList.size(); i++)
                        {
                            //Adds score and removes them if balloon is on screen
                            if(e.getKeyCode() == KeyEvent.getExtendedKeyCodeForChar(balloonLetters.get(i).charAt(0)))
                            {
                                player.setScore();
                                pane.remove(balloonList.get(i));
                                balloonList.get(i).setPopped(true);
                                frame.repaint();
                            }

                            if(i == balloonList.size())
                                i = 0;
                        }
                    }

                    public void keyTyped(KeyEvent e)
                    {
                    }

                    public void keyReleased(KeyEvent e)
                    {
                    }
                }

                //Creates TimerListener Objects
                ActionListener listener = new BalloonMovingListener();
                pane.addKeyListener(new Keys());

                //Dealy for 10ms
                int Delay = 10;

                //Creates Timer Objects
                Timer t2 = new Timer(Delay, listener);

                //Starts the BalloonMoving Action and BalloonSpawning Action
                t2.start();
            }
        }
        playGame.addActionListener(new 
            Action());
    }
}
