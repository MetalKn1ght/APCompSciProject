import java.awt.*;
import java.awt.event.*;
import javax.swing.OverlayLayout;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.*;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
/**
 * Write a description of class Runner here.
 * 
 * @author (Michael Bagamian) 
 * @version (5/24/17)
 */
public class Runner
{
    private static final int FRAME_WIDTH = 3000;
    private static final int FRAME_HEIGHT = 1000;
    private static ArrayList<BalloonGUI>  balloonList = new ArrayList<BalloonGUI>();
    public static void main(String[] args)
    {
        JFrame frame = new JFrame();
        JFrame frameFirst=new JFrame("Welcome to the Balloon Game!");
        frameFirst.setVisible(true);
        frameFirst.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frameFirst.setSize(FRAME_WIDTH, FRAME_HEIGHT);        
        JPanel paneFirst=new JPanel();
        JButton playGame=new JButton("Play Now");
        JButton tutorial=new JButton("How To Play");
        //paneFirst.setLayout(new OverlayLayout(paneFirst));
        paneFirst.add(playGame);
        frameFirst.add(paneFirst);
        JPanel pane=new JPanel();                        
        class Action implements ActionListener
        {
            public void actionPerformed(ActionEvent e)
            {
                /*JFrame frameSecond=new JFrame("Game");
                frameSecond.setVisible(true);
                frameSecond.setSize(FRAME_WIDTH, FRAME_HEIGHT);
                JPanel paneSecond=new JPanel();
                frameSecond.add(paneSecond);*/
                BalloonGUI component = new BalloonGUI();
                String letter=component.getArray()[component.getVal()].toUpperCase();
                char let=letter.charAt(0);
                LayoutManager overlay=new OverlayLayout(pane);
                pane.setLayout(overlay);
                frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
                SpikeBarBackgroundGUI sBB = new SpikeBarBackgroundGUI();                                      
                pane.add(sBB);    
                pane.add(component);
                pane.setFocusable(true);
                pane.requestFocusInWindow();
                pane.setFocusTraversalKeysEnabled(false);
                ImageIcon imageIcon = new ImageIcon("stockvault-sky1420691.jpg"); //url: https://fmirentals.com/weather-temps/
                Image imag = imageIcon.getImage();
                Image img2 = imag.getScaledInstance(FRAME_WIDTH,FRAME_HEIGHT, java.awt.Image.SCALE_SMOOTH); 
                ImageIcon img=new ImageIcon(img2);
                JLabel image=new JLabel(img);
                pane.add(image,BorderLayout.CENTER);
                frame.add(pane);
                frame.setTitle("Balloons Moving");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       
                frame.setVisible(true);

                class TimerListener implements ActionListener
                {
                    public void actionPerformed(ActionEvent event)
                    {
                        component.moveBy(0, 1);
                        frame.repaint();
                    }
                }
                
                class Keys implements KeyListener
                {
                    public void keyPressed(KeyEvent e)
                    {
                        /*if(e.getKeyCode())
                        {
                            component.setColor(Color.green);
                        }*/
                        if(component.getH()+100>=75 && component.getH()+100<=175 &&  e.getKeyCode()==KeyEvent.getExtendedKeyCodeForChar(let))
                        {
                            pane.remove(component);
                            frame.repaint();
                        }
                    }

                    public void keyTyped(KeyEvent e)
                    {

                    }

                    public void keyReleased(KeyEvent e)
                    {

                    }
                }
                ActionListener listener = new TimerListener();
                pane.addKeyListener(new Keys());
                final int DELAY = 10; // Milliseconds between timer ticks
                Timer t = new Timer(DELAY, listener);
                t.start();
            }
        } 
        playGame.addActionListener(new Action());        
    }
}






















import java.awt.*;
import javax.swing.OverlayLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import java.awt.image.BufferedImage;
import javax.swing.Timer;
import java.io.File;
import javax.imageio.ImageIO;
import java.util.*;

/**
 * Write a description of class Runner2 here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Runner
{
    private static final int FRAME_WIDTH = 3000;
    private static final int FRAME_HEIGHT = 1000;
    private static ArrayList<BalloonGUI>  balloonList = new ArrayList<BalloonGUI>();
    private static int balloonCount = 0;

    public static void main(String[] args)
    {
        //Creates the Frame and the Pane
        JFrame frame = new JFrame();
        JPanel pane = new JPanel();

        //Creates the Balloon Spanwer, Spikes, and Bar
        PlayerStatus player = new PlayerStatus();
        SpikeBarBackgroundGUI sBB = new SpikeBarBackgroundGUI();
        BalloonGUI balloon = new BalloonGUI();

        LayoutManager overlay = new OverlayLayout(pane);
        pane.setLayout(overlay);

        //Sets the Frame size
        frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);

        //Imports the background image and adds it onto the panel
        ImageIcon imageIcon = new ImageIcon("images.jpg"); //url: http://bhstorm.com/beautiful-sky-wallpapers-mobile/
        Image imag = imageIcon.getImage();
        Image img2 = imag.getScaledInstance(FRAME_WIDTH,FRAME_HEIGHT, java.awt.Image.SCALE_SMOOTH); 
        ImageIcon img = new ImageIcon(img2);
        JLabel image = new JLabel(img);

        //Adds the Pane onto the Frame
        frame.add(pane);
        frame.setTitle("Balloons Moving");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       
        frame.setVisible(true);

        //pane.add(balloon);
        balloonList.add(balloon);

        //Adds the Spikes and Bar onto the Pane
        pane.add(sBB); 

        //Moves the image to the back
        pane.add(image,BorderLayout.CENTER);

        class BalloonSpawner implements ActionListener
        {
            public void actionPerformed(ActionEvent  event)
            {
                balloonList.add(new BalloonGUI());
                balloonCount++;
            }
        }

        class TimerListener implements ActionListener
        {
            public void actionPerformed(ActionEvent event)
            {
                if(balloonCount == 0)
                {
                    pane.add(balloon);
                    balloon.moveBy(1);
                }
                //balloonList.get(balloonCount).moveBy(1);

                else //(balloonCount > 0)
                {
                    pane.add(balloonList.get(balloonCount));

                    //                     for(int i = 0; i < 4; i++)
                    //                     {                        
                    (balloonList.get(balloonCount)).moveBy(1);
                    //                         for(int count = 0; count < 10; count++)
                    //                         {
                    //                         }
                    //pane.repaint();
                    //balloonList.get(balloonCount).moveBy(1);
                }
                pane.repaint();
            }
        }

        ActionListener listener = new TimerListener();
        ActionListener balloonListener = new BalloonSpawner();

        final int DELAY = 1000; // Milliseconds between timer ticks
        final int DELAY2 = 10;

        Timer t = new Timer(DELAY2, listener);
        Timer t2 = new Timer(DELAY, balloonListener);

        for(int i = 0; i < 5; i++)
        {
            t.start();
            t2.start();
        }
    }
}

